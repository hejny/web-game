V "minulém díle":https://www.itnetwork.cz/javascript/uzivatelske-rozhrani jsem ukazoval výrobu user interface pro hru.
V tomto posledním díle ukáži nasazovaní celého projektu na server.


Nasazování na server

První polovinu tutoriálu jsem vyráběl statické JavaScriptové soubory. Ty se dají lehce nakopírovat na server např. pomocí FTP. Nevýhoda tohoto postupu je ta, že po každé změně musím aktualizované soubory kopírovat ručně. Také nastává doba, kdy jsou některé soubory ze staré a některé soubory z nové verze. To bývá velký problém u projektů, které mají být spolehlivé a chodí na ně mnoho lidí.

"Potom jsem ukázal, jaké jsou nevýhody čistého JavaScriptu a přešel jsem na TypeScript":. Mohl bych si nechat vytvořit statické soubory a dále postupovat stejně - tzn. při aktualizaci bych nejdříve zadal do konzole:

code

a potom bych to, co se mi vytvoří do složky static nakopíroval na server.

Tento postup je OK, pokud budu aktualizovat aplikaci několikrát ročně. Pokud bych chtěl aktualizovat častěji např. každý týden či den, bylo by dobré celý postup automatizovat.


Contidefdsdfeagdaedh rdfhgIntegrf




Mnoho hostingů a







##Testy

Bylo by dobré mít jistotu, že se při



Před každým nasazením můžeme proklikat aplikaci ručně, můžeme si

- Pokud kliknu
...
...
...


To je ale zcela zbytečná práce. Tento "checklist" můžeš naprogramovat a počítač ho bude provádět za tebe.




root.test.ts













Rozdělanou hru si můžeš stáhnout pod článkem, nebo jít do "Git repozitáře":https://github.com/hejny/web-game, kde najdeš nejnovější verzi zdrojových kódů. Nebo si ji "rovnou můžeš vyzkoušet na hejny.github.io/web-game":https://hejny.github.io/web-game/ .